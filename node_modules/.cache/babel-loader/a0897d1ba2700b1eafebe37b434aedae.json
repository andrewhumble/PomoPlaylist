{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhumble/Documents/GitHub/pomoplaylist/src/components/CountDownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountDownTimer = _ref => {\n  _s();\n\n  let {\n    hoursMinSecs,\n    values,\n    pause,\n    play,\n    incrementSessionCount,\n    setStep\n  } = _ref;\n  const {\n    hours = 0,\n    minutes = 0,\n    seconds = 0\n  } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = React.useState([hours, minutes, seconds]);\n\n  const tick = () => {\n    if (parseInt(hrs) === 0 && parseInt(mins) === 0 && parseInt(secs) === 0) {\n      if (values.playing === true) {\n        console.log(values);\n\n        if (values.sessions % 3 === 0 && values.sessions !== 0) {\n          pause(values.choiceId);\n          setStep(6);\n        } else {\n          pause(values.choiceId);\n          setStep(5);\n        }\n      } else if (values.playing === false) {\n        incrementSessionCount();\n        play(values.choiceId);\n        setStep(4);\n      }\n    } else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  }; //const reset = () =>\n  //  setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n\n  React.useEffect(() => {\n    const timerId = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerId);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${hrs.toString().padStart(2, \"0\")}:${mins.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountDownTimer, \"0bZ3Cef9Kjg/PSGSWoxMpgjdeAw=\");\n\n_c = CountDownTimer;\nexport default CountDownTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDownTimer\");","map":{"version":3,"sources":["/Users/andrewhumble/Documents/GitHub/pomoplaylist/src/components/CountDownTimer.js"],"names":["React","CountDownTimer","hoursMinSecs","values","pause","play","incrementSessionCount","setStep","hours","minutes","seconds","hrs","mins","secs","setTime","useState","tick","parseInt","playing","console","log","sessions","choiceId","useEffect","timerId","setInterval","clearInterval","toString","padStart"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,cAAc,GAAG,QAA2E;AAAA;;AAAA,MAA1E;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA,qBAArC;AAA4DC,IAAAA;AAA5D,GAA0E;AAChG,QAAM;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA,OAAO,GAAG,CAAvB;AAA0BC,IAAAA,OAAO,GAAG;AAApC,MAA0CR,YAAhD;AACA,QAAM,CAAC,CAACS,GAAD,EAAMC,IAAN,EAAYC,IAAZ,CAAD,EAAoBC,OAApB,IAA+Bd,KAAK,CAACe,QAAN,CAAe,CAClDP,KADkD,EAElDC,OAFkD,EAGlDC,OAHkD,CAAf,CAArC;;AAMA,QAAMM,IAAI,GAAG,MAAM;AACjB,QAAIC,QAAQ,CAACN,GAAD,CAAR,KAAkB,CAAlB,IAAuBM,QAAQ,CAACL,IAAD,CAAR,KAAmB,CAA1C,IAA+CK,QAAQ,CAACJ,IAAD,CAAR,KAAmB,CAAtE,EAAyE;AACvE,UAAIV,MAAM,CAACe,OAAP,KAAmB,IAAvB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;;AACA,YAAIA,MAAM,CAACkB,QAAP,GAAkB,CAAlB,KAAwB,CAAxB,IAA6BlB,MAAM,CAACkB,QAAP,KAAoB,CAArD,EAAwD;AACtDjB,UAAAA,KAAK,CAACD,MAAM,CAACmB,QAAR,CAAL;AACAf,UAAAA,OAAO,CAAC,CAAD,CAAP;AACD,SAHD,MAGO;AACLH,UAAAA,KAAK,CAACD,MAAM,CAACmB,QAAR,CAAL;AACAf,UAAAA,OAAO,CAAC,CAAD,CAAP;AACD;AACF,OATD,MASO,IAAIJ,MAAM,CAACe,OAAP,KAAmB,KAAvB,EAA8B;AACnCZ,QAAAA,qBAAqB;AACrBD,QAAAA,IAAI,CAACF,MAAM,CAACmB,QAAR,CAAJ;AACAf,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD;AACF,KAfD,MAgBK,IAAIK,IAAI,KAAK,CAAT,IAAcC,IAAI,KAAK,CAA3B,EAA8B;AACjCC,MAAAA,OAAO,CAAC,CAACH,GAAG,GAAG,CAAP,EAAU,EAAV,EAAc,EAAd,CAAD,CAAP;AACD,KAFI,MAEE,IAAIE,IAAI,KAAK,CAAb,EAAgB;AACrBC,MAAAA,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAI,GAAG,CAAb,EAAgB,EAAhB,CAAD,CAAP;AACD,KAFM,MAEA;AACLE,MAAAA,OAAO,CAAC,CAACH,GAAD,EAAMC,IAAN,EAAYC,IAAI,GAAG,CAAnB,CAAD,CAAP;AACD;AACF,GAxBD,CARgG,CAkChG;AACA;;;AAEAb,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB,UAAMC,OAAO,GAAGC,WAAW,CAAC,MAAMT,IAAI,EAAX,EAAe,IAAf,CAA3B;AACA,WAAO,MAAMU,aAAa,CAACF,OAAD,CAA1B;AACD,GAHD;AAKA,sBACE;AAAA,2BACE;AAAA,gBAAK,GAAEb,GAAG,CAACgB,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAgC,IAAGhB,IAAI,CAC3Ce,QADuC,GAEvCC,QAFuC,CAE9B,CAF8B,EAE3B,GAF2B,CAEtB,IAAGf,IAAI,CAACc,QAAL,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAiC;AAFxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjDD;;GAAM3B,c;;KAAAA,c;AAmDN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\n\nconst CountDownTimer = ({ hoursMinSecs, values, pause, play, incrementSessionCount, setStep }) => {\n  const { hours = 0, minutes = 0, seconds = 0 } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = React.useState([\n    hours,\n    minutes,\n    seconds,\n  ]);\n\n  const tick = () => {\n    if (parseInt(hrs) === 0 && parseInt(mins) === 0 && parseInt(secs) === 0) {\n      if (values.playing === true) {\n        console.log(values);\n        if (values.sessions % 3 === 0 && values.sessions !== 0) {\n          pause(values.choiceId);\n          setStep(6);\n        } else {\n          pause(values.choiceId);\n          setStep(5);\n        }\n      } else if (values.playing === false) {\n        incrementSessionCount();\n        play(values.choiceId);\n        setStep(4);\n      }\n    }\n    else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  //const reset = () =>\n  //  setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n  React.useEffect(() => {\n    const timerId = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerId);\n  });\n\n  return (\n    <div>\n      <p>{`${hrs.toString().padStart(2, \"0\")}:${mins\n        .toString()\n        .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`}</p>\n    </div>\n  );\n};\n\nexport default CountDownTimer;\n"]},"metadata":{},"sourceType":"module"}