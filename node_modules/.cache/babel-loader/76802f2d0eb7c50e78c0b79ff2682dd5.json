{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhumble/Documents/GitHub/pomoplaylist/src/components/PomoPlay.js\";\nimport React, { Component } from 'react';\nimport Confirmation from './Confirmation';\nimport Authentication from './Authentication';\nimport Choose from './Choose';\nimport Work from './Work';\nimport ShortBreak from \"./ShortBreak\";\nimport LongBreak from \"./LongBreak\";\nimport \"react-spotify-auth/dist/index.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PomoPlay extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      step: 1,\n      accessToken: \"\",\n      choice: \"\",\n      choiceId: \"\",\n      playlists: [],\n      playlistsHash: {},\n      workTime: \"25\",\n      shortBreakTime: \"5\",\n      longBreakTime: \"10\",\n      playing: false,\n      sessions: 1\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.setStep = input => {\n      this.setState({\n        step: input\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      if (Array.isArray([input])) {\n        this.setState({\n          [input]: e.target.value\n        });\n\n        if ([input][0] === \"choice\") {\n          this.setState({\n            choiceId: this.state.playlistsHash[e.target.value]\n          });\n        }\n      } else {\n        this.setState({\n          [input]: e.target.value\n        });\n      }\n    };\n\n    this.incrementSessionCount = () => {\n      const {\n        sessions\n      } = this.state;\n      this.setState({\n        sessions: sessions + 1\n      });\n    };\n\n    this.handleToken = input => {\n      this.setState({\n        accessToken: [input][0].token\n      }); //this.setState({ username: [input].token });\n\n      console.log([input]);\n    };\n\n    this.getUserPlaylists = accessToken => {\n      const spotifyApi = new SpotifyWebApi();\n      spotifyApi.setAccessToken(accessToken.token);\n      spotifyApi.getUserPlaylists().then(response => {\n        var tempArr = [];\n        var tempHash = {};\n\n        for (var i = 0; i < response.items.length; i++) {\n          tempHash[response.items[i].name] = response.items[i].id;\n          var tempObj = [];\n          tempObj.push(response.items[i].name);\n          tempObj.push(response.items[i].id);\n          tempArr.push(tempObj);\n        }\n\n        this.setState({\n          playlistsHash: tempHash\n        });\n        this.setState({\n          playlists: tempArr\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.play = choiceId => {\n      console.log(this.state.accessToken);\n      const spotifyApi = new SpotifyWebApi();\n      spotifyApi.setAccessToken(this.state.accessToken);\n      spotifyApi.play({\n        context_uri: \"spotify:playlist:\" + choiceId\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          playing: true\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.pause = choiceId => {\n      console.log(this.state.accessToken);\n      const spotifyApi = new SpotifyWebApi();\n      spotifyApi.setAccessToken(this.state.accessToken);\n      spotifyApi.pause({\n        context_uri: \"spotify:playlist:\" + choiceId\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          playing: false\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      accessToken,\n      choice,\n      choiceId,\n      playlistsHash,\n      playlists,\n      workTime,\n      shortBreakTime,\n      longBreakTime,\n      playing,\n      sessions\n    } = this.state;\n    const values = {\n      accessToken,\n      choice,\n      playlists,\n      playlistsHash,\n      choiceId,\n      workTime,\n      shortBreakTime,\n      longBreakTime,\n      playing,\n      sessions\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Authentication, {\n          nextStep: this.nextStep,\n          values: values,\n          handleToken: this.handleToken,\n          getUserPlaylists: this.getUserPlaylists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Choose, {\n          prevStep: this.prevStep,\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Confirmation, {\n          prevStep: this.prevStep,\n          nextStep: this.nextStep,\n          values: values,\n          play: this.play,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Work, {\n          values: values,\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          pause: this.pause,\n          play: this.play,\n          setStep: this.setStep,\n          incrementSessionCount: this.incrementSessionCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this);\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(ShortBreak, {\n          values: values,\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          pause: this.pause,\n          play: this.play,\n          setStep: this.setStep,\n          incrementSessionCount: this.incrementSessionCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this);\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(LongBreak, {\n          values: values,\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          pause: this.pause,\n          play: this.play,\n          setStep: this.setStep,\n          incrementSessionCount: this.incrementSessionCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this);\n\n      default: // do nothing\n\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewhumble/Documents/GitHub/pomoplaylist/src/components/PomoPlay.js"],"names":["React","Component","Confirmation","Authentication","Choose","Work","ShortBreak","LongBreak","SpotifyWebApi","PomoPlay","state","step","accessToken","choice","choiceId","playlists","playlistsHash","workTime","shortBreakTime","longBreakTime","playing","sessions","nextStep","setState","setStep","input","prevStep","handleChange","e","Array","isArray","target","value","incrementSessionCount","handleToken","token","console","log","getUserPlaylists","spotifyApi","setAccessToken","then","response","tempArr","tempHash","i","items","length","name","id","tempObj","push","catch","play","context_uri","pause","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Confirmation from './Confirmation'\nimport Authentication from './Authentication'\nimport Choose from './Choose'\nimport Work from './Work'\nimport ShortBreak from \"./ShortBreak\";\nimport LongBreak from \"./LongBreak\";\n\n\nimport \"react-spotify-auth/dist/index.css\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nexport default class PomoPlay extends Component {\n  state = {\n    step: 1,\n    accessToken: \"\",\n    choice: \"\",\n    choiceId: \"\",\n    playlists: [],\n    playlistsHash: {},\n    workTime: \"25\",\n    shortBreakTime: \"5\",\n    longBreakTime: \"10\",\n    playing: false,\n    sessions: 1,\n  };\n\n  // proceed to the next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step + 1 });\n  };\n\n  // set current step\n  setStep = (input) => {\n    this.setState({ step: input });\n  };\n\n  // go back to previous step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({ step: step - 1 });\n  };\n\n  // handle field change\n  handleChange = (input) => (e) => {\n    if (Array.isArray([input])) {\n      this.setState({ [input]: e.target.value });\n      if ([input][0] === \"choice\") {\n        this.setState({ choiceId: this.state.playlistsHash[e.target.value] });\n      }\n    } else {\n      this.setState({ [input]: e.target.value });\n    }\n  };\n\n  incrementSessionCount = () => {\n    const { sessions } = this.state;\n    this.setState({ sessions: sessions + 1 });\n  };\n\n  // handle token change\n  handleToken = (input) => {\n    this.setState({ accessToken: [input][0].token });\n    //this.setState({ username: [input].token });\n    console.log([input]);\n  };\n\n  getUserPlaylists = (accessToken) => {\n    const spotifyApi = new SpotifyWebApi();\n    spotifyApi.setAccessToken(accessToken.token);\n    spotifyApi\n      .getUserPlaylists()\n      .then((response) => {\n        var tempArr = [];\n        var tempHash = {};\n        for (var i = 0; i < response.items.length; i++) {\n          tempHash[response.items[i].name] = response.items[i].id;\n          var tempObj = [];\n          tempObj.push(response.items[i].name);\n          tempObj.push(response.items[i].id);\n          tempArr.push(tempObj);\n        }\n        this.setState({ playlistsHash: tempHash });\n        this.setState({ playlists: tempArr });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  play = (choiceId) => {\n    console.log(this.state.accessToken);\n    const spotifyApi = new SpotifyWebApi();\n    spotifyApi.setAccessToken(this.state.accessToken);\n    spotifyApi\n      .play({\n        context_uri: \"spotify:playlist:\" + choiceId,\n      })\n      .then((response) => {\n        console.log(response);\n        this.setState({ playing: true });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  pause = (choiceId) => {\n    console.log(this.state.accessToken);\n    const spotifyApi = new SpotifyWebApi();\n    spotifyApi.setAccessToken(this.state.accessToken);\n    spotifyApi\n      .pause({\n        context_uri: \"spotify:playlist:\" + choiceId,\n      })\n      .then((response) => {\n        console.log(response);\n        this.setState({ playing: false });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  render() {\n    const { step } = this.state;\n    const {\n      accessToken,\n      choice,\n      choiceId,\n      playlistsHash,\n      playlists,\n      workTime,\n      shortBreakTime,\n      longBreakTime,\n      playing,\n      sessions,\n    } = this.state;\n    const values = {\n      accessToken,\n      choice,\n      playlists,\n      playlistsHash,\n      choiceId,\n      workTime,\n      shortBreakTime,\n      longBreakTime,\n      playing,\n      sessions,\n    };\n\n    switch (step) {\n      case 1:\n        return (\n          <Authentication\n            nextStep={this.nextStep}\n            values={values}\n            handleToken={this.handleToken}\n            getUserPlaylists={this.getUserPlaylists}\n          />\n        );\n      case 2:\n        return (\n          <Choose\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      case 3:\n        return (\n          <Confirmation\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            values={values}\n            play={this.play}\n            handleChange={this.handleChange}\n          />\n        );\n      case 4:\n        return (\n          <Work\n            values={values}\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            pause={this.pause}\n            play={this.play}\n            setStep={this.setStep}\n            incrementSessionCount={this.incrementSessionCount}\n          />\n        );\n      case 5:\n        return (\n          <ShortBreak\n            values={values}\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            pause={this.pause}\n            play={this.play}\n            setStep={this.setStep}\n            incrementSessionCount={this.incrementSessionCount}\n          />\n        );\n      case 6:\n        return (\n          <LongBreak\n            values={values}\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            pause={this.pause}\n            play={this.play}\n            setStep={this.setStep}\n            incrementSessionCount={this.incrementSessionCount}\n          />\n        );\n      default:\n      // do nothing\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}